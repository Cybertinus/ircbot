#!/usr/bin/env python

import sys, urllib, re, csv, sqlite3


ix = "amsix"
url = "https://my.ams-ix.net/api/v1/members.tsv?exchange=NL"

query = """ INSERT INTO ix (name, asno, org, contact,
			    lan, ipv4, ipv6, speed, switch, location)
			VALUES (?,?,?,?,?,?,?,?,?,?) """

def main(argv=None):
    if argv is None:
        argv = sys.argv

    try:
	datadir = sys.argv[1]
    except:
	print "usage: %s datadir" % sys.argv[0]
	sys.exit(1)


    db = sqlite3.connect(datadir + "/ix.sqlite")
    db.text_factory = lambda s:s.decode('utf-8')
    con = db.cursor()

    try:
	response = urllib.urlopen(url)
    except IOError, e:
	if hasattr(e, 'reason'):
	    print 'failed to fetch %s: ' % url, e.reason
	elif hasattr(e, 'code'):
	    print 'failed to fetch %s: ' % url, e.code
	sys.exit(1)

    if not response:
	print "failed to fetch %s" % url
	sys.exit(1)


    con.execute("DELETE FROM ix where name = ?", (ix,))
    members = csv.DictReader(response, dialect='excel-tab')

    for m in members:

	for key in m.keys():
	    if m[key] in ['withheld', 'x', 'private']:
		m[key] = None
	    if key in ["ISP (v4)", "ISP (v6)"]:
		m[key] = m[key].split("/")[0]

	result = con.execute(query,
		  (ix, m["AS number"], m["Organisation"], m["Peering Contact"],
		   m["LAN"], m["ISP (v4)"], m["ISP (v6)"], m["Speed"],
		   m["Switch"], m["Location"]))

	if not result:
	    sys.exit(1)

    db.commit()
    db.close()


if __name__ == "__main__":
    sys.exit(main())

